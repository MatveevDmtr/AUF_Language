

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
--------------------Start program--------------------
File size = 366
buffer size: 366
fread number of symbols: 358
tcode created
line in readVal: main ()
	Лучше иметь друга, чем друг друга: Волк Факториал (7)
	Когда волк молчит, лучше его не перебивать: Волк	
Обид не держу - держу пиво. Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Запомните твари: Число Число*Факториал(Число-1)
	Сделал дело - дело сделано. Число end.
num read sym: 0
next sym: 40
line in readVal: Волк Факториал (7)
	Когда волк молчит, лучше его не перебивать: Волк	
Обид не держу - держу пиво. Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Запомните твари: Число Число*Факториал(Число-1)
	Сделал дело - дело сделано. Число end.
num read sym: 0
next sym: -44
line in readVal: Факториал (7)
	Когда волк молчит, лучше его не перебивать: Волк	
Обид не держу - держу пиво. Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Запомните твари: Число Число*Факториал(Число-1)
	Сделал дело - дело сделано. Число end.
num read sym: 0
next sym: 40
line in readVal: 7)
	Когда волк молчит, лучше его не перебивать: Волк	
Обид не держу - держу пиво. Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Запомните твари: Число Число*Факториал(Число-1)
	Сделал дело - дело сделано. Число end.
num read sym: 1


++++++++++Tcode Dump++++++++++

Size     = 9
Capacity = 10

[0000]:  OPR    VOID
[0001]:  STR    main
[0002]:  OPR    OPEN
[0003]:  OPR    CLOS
[0004]:  NLN    1
[0005]:  OPR    VAR
[0006]:  STR    Волк
[0007]:  STR    Факториал
[0008]:  OPR    OPEN
[0009]:  FREE

----------Tcode Dump----------

finish Tcode Recalloc


++++++++++Tcode Dump++++++++++

Size     = 9
Capacity = 20

[0000]:  OPR    VOID
[0001]:  STR    main
[0002]:  OPR    OPEN
[0003]:  OPR    CLOS
[0004]:  NLN    1
[0005]:  OPR    VAR
[0006]:  STR    Волк
[0007]:  STR    Факториал
[0008]:  OPR    OPEN
[0009]:  FREE
[0010]:  FREE
[0011]:  FREE
[0012]:  FREE
[0013]:  FREE
[0014]:  FREE
[0015]:  FREE
[0016]:  FREE
[0017]:  FREE
[0018]:  FREE
[0019]:  FREE

----------Tcode Dump----------

line in readVal: Волк	
Обид не держу - держу пиво. Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Запомните твари: Число Число*Факториал(Число-1)
	Сделал дело - дело сделано. Число end.
num read sym: 0
next sym: -50
line in readVal: Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Запомните твари: Число Число*Факториал(Число-1)
	Сделал дело - дело сделано. Число end.
num read sym: 0
next sym: 40
line in readVal: Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Запомните твари: Число Число*Факториал(Число-1)
	Сделал дело - дело сделано. Число end.
num read sym: 0
next sym: 41


++++++++++Tcode Dump++++++++++

Size     = 19
Capacity = 20

[0000]:  OPR    VOID
[0001]:  STR    main
[0002]:  OPR    OPEN
[0003]:  OPR    CLOS
[0004]:  NLN    1
[0005]:  OPR    VAR
[0006]:  STR    Волк
[0007]:  STR    Факториал
[0008]:  OPR    OPEN
[0009]:  VAL    7
[0010]:  OPR    CLOS
[0011]:  NLN    1
[0012]:  OPR    OUT
[0013]:  STR    Волк
[0014]:  NLN    0
[0015]:  OPR    VOID
[0016]:  STR    Факториал
[0017]:  OPR    OPEN
[0018]:  STR    Число
[0019]:  FREE

----------Tcode Dump----------

finish Tcode Recalloc


++++++++++Tcode Dump++++++++++

Size     = 19
Capacity = 40

[0000]:  OPR    VOID
[0001]:  STR    main
[0002]:  OPR    OPEN
[0003]:  OPR    CLOS
[0004]:  NLN    1
[0005]:  OPR    VAR
[0006]:  STR    Волк
[0007]:  STR    Факториал
[0008]:  OPR    OPEN
[0009]:  VAL    7
[0010]:  OPR    CLOS
[0011]:  NLN    1
[0012]:  OPR    OUT
[0013]:  STR    Волк
[0014]:  NLN    0
[0015]:  OPR    VOID
[0016]:  STR    Факториал
[0017]:  OPR    OPEN
[0018]:  STR    Число
[0019]:  FREE
[0020]:  FREE
[0021]:  FREE
[0022]:  FREE
[0023]:  FREE
[0024]:  FREE
[0025]:  FREE
[0026]:  FREE
[0027]:  FREE
[0028]:  FREE
[0029]:  FREE
[0030]:  FREE
[0031]:  FREE
[0032]:  FREE
[0033]:  FREE
[0034]:  FREE
[0035]:  FREE
[0036]:  FREE
[0037]:  FREE
[0038]:  FREE
[0039]:  FREE

----------Tcode Dump----------

line in readVal: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Запомните твари: Число Число*Факториал(Число-1)
	Сделал дело - дело сделано. Число end.
num read sym: 0
next sym: -16
line in readVal: 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Запомните твари: Число Число*Факториал(Число-1)
	Сделал дело - дело сделано. Число end.
num read sym: 1
line in readVal: 1
	Но хотя бы не я:
		Запомните твари: Число Число*Факториал(Число-1)
	Сделал дело - дело сделано. Число end.
num read sym: 1
line in readVal: Число Число*Факториал(Число-1)
	Сделал дело - дело сделано. Число end.
num read sym: 0
next sym: -41
line in readVal: Число*Факториал(Число-1)
	Сделал дело - дело сделано. Число end.
num read sym: 0
next sym: 42
line in readVal: Факториал(Число-1)
	Сделал дело - дело сделано. Число end.
num read sym: 0
next sym: 40
line in readVal: Число-1)
	Сделал дело - дело сделано. Число end.
num read sym: 0
next sym: 45
line in readVal: 1)
	Сделал дело - дело сделано. Число end.
num read sym: 1


++++++++++Tcode Dump++++++++++

Size     = 39
Capacity = 40

[0000]:  OPR    VOID
[0001]:  STR    main
[0002]:  OPR    OPEN
[0003]:  OPR    CLOS
[0004]:  NLN    1
[0005]:  OPR    VAR
[0006]:  STR    Волк
[0007]:  STR    Факториал
[0008]:  OPR    OPEN
[0009]:  VAL    7
[0010]:  OPR    CLOS
[0011]:  NLN    1
[0012]:  OPR    OUT
[0013]:  STR    Волк
[0014]:  NLN    0
[0015]:  OPR    VOID
[0016]:  STR    Факториал
[0017]:  OPR    OPEN
[0018]:  STR    Число
[0019]:  OPR    CLOS
[0020]:  NLN    1
[0021]:  OPR    IF
[0022]:  STR    Число
[0023]:  OPR    EQ
[0024]:  VAL    1
[0025]:  NLN    2
[0026]:  OPR    RET
[0027]:  VAL    1
[0028]:  NLN    1
[0029]:  OPR    ELSE
[0030]:  NLN    2
[0031]:  OPR    ASS
[0032]:  STR    Число
[0033]:  STR    Число
[0034]:  OPR    MUL
[0035]:  STR    Факториал
[0036]:  OPR    OPEN
[0037]:  STR    Число
[0038]:  OPR    SUB
[0039]:  FREE

----------Tcode Dump----------

finish Tcode Recalloc


++++++++++Tcode Dump++++++++++

Size     = 39
Capacity = 80

[0000]:  OPR    VOID
[0001]:  STR    main
[0002]:  OPR    OPEN
[0003]:  OPR    CLOS
[0004]:  NLN    1
[0005]:  OPR    VAR
[0006]:  STR    Волк
[0007]:  STR    Факториал
[0008]:  OPR    OPEN
[0009]:  VAL    7
[0010]:  OPR    CLOS
[0011]:  NLN    1
[0012]:  OPR    OUT
[0013]:  STR    Волк
[0014]:  NLN    0
[0015]:  OPR    VOID
[0016]:  STR    Факториал
[0017]:  OPR    OPEN
[0018]:  STR    Число
[0019]:  OPR    CLOS
[0020]:  NLN    1
[0021]:  OPR    IF
[0022]:  STR    Число
[0023]:  OPR    EQ
[0024]:  VAL    1
[0025]:  NLN    2
[0026]:  OPR    RET
[0027]:  VAL    1
[0028]:  NLN    1
[0029]:  OPR    ELSE
[0030]:  NLN    2
[0031]:  OPR    ASS
[0032]:  STR    Число
[0033]:  STR    Число
[0034]:  OPR    MUL
[0035]:  STR    Факториал
[0036]:  OPR    OPEN
[0037]:  STR    Число
[0038]:  OPR    SUB
[0039]:  FREE
[0040]:  FREE
[0041]:  FREE
[0042]:  FREE
[0043]:  FREE
[0044]:  FREE
[0045]:  FREE
[0046]:  FREE
[0047]:  FREE
[0048]:  FREE
[0049]:  FREE
[0050]:  FREE
[0051]:  FREE
[0052]:  FREE
[0053]:  FREE
[0054]:  FREE
[0055]:  FREE
[0056]:  FREE
[0057]:  FREE
[0058]:  FREE
[0059]:  FREE
[0060]:  FREE
[0061]:  FREE
[0062]:  FREE
[0063]:  FREE
[0064]:  FREE
[0065]:  FREE
[0066]:  FREE
[0067]:  FREE
[0068]:  FREE
[0069]:  FREE
[0070]:  FREE
[0071]:  FREE
[0072]:  FREE
[0073]:  FREE
[0074]:  FREE
[0075]:  FREE
[0076]:  FREE
[0077]:  FREE
[0078]:  FREE
[0079]:  FREE

----------Tcode Dump----------

line in readVal: Число end.
num read sym: 0
next sym: 0


++++++++++Tcode Dump++++++++++

Size     = 44
Capacity = 80

[0000]:  OPR    VOID
[0001]:  STR    main
[0002]:  OPR    OPEN
[0003]:  OPR    CLOS
[0004]:  NLN    1
[0005]:  OPR    VAR
[0006]:  STR    Волк
[0007]:  STR    Факториал
[0008]:  OPR    OPEN
[0009]:  VAL    7
[0010]:  OPR    CLOS
[0011]:  NLN    1
[0012]:  OPR    OUT
[0013]:  STR    Волк
[0014]:  NLN    0
[0015]:  OPR    VOID
[0016]:  STR    Факториал
[0017]:  OPR    OPEN
[0018]:  STR    Число
[0019]:  OPR    CLOS
[0020]:  NLN    1
[0021]:  OPR    IF
[0022]:  STR    Число
[0023]:  OPR    EQ
[0024]:  VAL    1
[0025]:  NLN    2
[0026]:  OPR    RET
[0027]:  VAL    1
[0028]:  NLN    1
[0029]:  OPR    ELSE
[0030]:  NLN    2
[0031]:  OPR    ASS
[0032]:  STR    Число
[0033]:  STR    Число
[0034]:  OPR    MUL
[0035]:  STR    Факториал
[0036]:  OPR    OPEN
[0037]:  STR    Число
[0038]:  OPR    SUB
[0039]:  VAL    1
[0040]:  OPR    CLOS
[0041]:  NLN    1
[0042]:  OPR    RET
[0043]:  STR    Число
[0044]:  FREE
[0045]:  FREE
[0046]:  FREE
[0047]:  FREE
[0048]:  FREE
[0049]:  FREE
[0050]:  FREE
[0051]:  FREE
[0052]:  FREE
[0053]:  FREE
[0054]:  FREE
[0055]:  FREE
[0056]:  FREE
[0057]:  FREE
[0058]:  FREE
[0059]:  FREE
[0060]:  FREE
[0061]:  FREE
[0062]:  FREE
[0063]:  FREE
[0064]:  FREE
[0065]:  FREE
[0066]:  FREE
[0067]:  FREE
[0068]:  FREE
[0069]:  FREE
[0070]:  FREE
[0071]:  FREE
[0072]:  FREE
[0073]:  FREE
[0074]:  FREE
[0075]:  FREE
[0076]:  FREE
[0077]:  FREE
[0078]:  FREE
[0079]:  FREE

----------Tcode Dump----------

start making syntax tree
start CodeBlock
try to find open brace in ip: 2
start GetDefParams
start GetVariable: ip=3
first var in param: 0000000000000000
No def params found
try to find closing brace in ip: 3
start NewLine: ip: 4, tcode->Size: 44
new line found (curr_line): 2
NLN: 1, curr level: 0
start CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
Returning GetOutput instead of INPUT
start GetOutput
Returning GetNewVar instead of OUTPUT
start GetNewVar
start GetVariable: ip=6
got variable in GetNewVar()
start GetE()
start GetT()
start GetDeg()
start GetP()
try to find open brace in ip: 8
start GetDefParams
start GetE()
start GetT()
start GetDeg()
start GetP()
first var in param: 000001cfa4b99dc0
before cycle in GetDefParam
ret from GetParams, ip: 10
try to find closing brace in ip: 10
content of l_node: Волк
finish GetNewVar()
finish GetTrunkBranch()
block root: 000001cfa4b99e60
before cycle in CodeBlock
start NewLine: ip: 11, tcode->Size: 44
new line found (curr_line): 3
NLN: 1, curr level: 1
iteration in CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
Returning GetOutput instead of INPUT
start GetOutput
start GetDefParams
start GetE()
start GetT()
start GetDeg()
start GetP()
first var in param: 000001cfa4b99f00
before cycle in GetDefParam
ret from GetParams, ip: 14
got expression in GetOutput()
finish GetOutput()
finish GetTrunkBranch()
found action: 000001cfa64b39b0, type: STM
block tail: 000001cfa4b99e60
end iteration
curr_level: 1
start NewLine: ip: 14, tcode->Size: 44
new line found (curr_line): 4
NLN: 0, curr level: 1
level-: 0
NLN: 0
block root: 000001cfa4b99e60
finish GetTrunkBranch()
block root: 000001cfa4b9a040
before cycle in CodeBlock
start NewLine: ip: 14, tcode->Size: 44
new line found (curr_line): 4
NLN: 0, curr level: 0
iteration in CodeBlock
try to find open brace in ip: 17
start GetDefParams
start GetVariable: ip=18
first var in param: 000001cfa4b9a6d0
before cycle in GetDefParam
ret from GetParams, ip: 19
try to find closing brace in ip: 19
start NewLine: ip: 20, tcode->Size: 44
new line found (curr_line): 5
NLN: 1, curr level: 0
start CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
Returning GetOutput instead of INPUT
start GetOutput
Returning GetNewVar instead of OUTPUT
start GetNewVar
Returning GetRet instead of NEWVAR
start GetRet
Returning GetWhile instead of RET
returning GetAss in GetWhile
start GetBoolP
start GetE()
start GetT()
start GetDeg()
start GetP()
start GetE()
start GetT()
start GetDeg()
start GetP()
start NewLine: ip: 25, tcode->Size: 44
new line found (curr_line): 6
NLN: 2, curr level: 1
start CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
Returning GetOutput instead of INPUT
start GetOutput
Returning GetNewVar instead of OUTPUT
start GetNewVar
Returning GetRet instead of NEWVAR
start GetRet
start GetE()
start GetT()
start GetDeg()
start GetP()
got expression in GetRet()
finish GetRet()
finish GetTrunkBranch()
block root: 000001cfa4b9a130
before cycle in CodeBlock
start NewLine: ip: 28, tcode->Size: 44
new line found (curr_line): 7
NLN: 1, curr level: 2
level-: 1
NLN: 1
block root: 000001cfa4b9a130
start NewLine: ip: 28, tcode->Size: 44
new line found (curr_line): 7
NLN: 1, curr level: 1
start NewLine: ip: 30, tcode->Size: 44
new line found (curr_line): 8
NLN: 2, curr level: 1
start CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
Returning GetOutput instead of INPUT
start GetOutput
Returning GetNewVar instead of OUTPUT
start GetNewVar
Returning GetRet instead of NEWVAR
start GetRet
Returning GetWhile instead of RET
returning GetAss in GetWhile
returning GetAss in GetIf
start GetAss
start GetVariable: ip=32
got variable in GetAss()
start GetE()
start GetT()
start GetDeg()
start GetP()
start GetDeg()
start GetP()
try to find open brace in ip: 36
start GetDefParams
start GetE()
start GetT()
start GetDeg()
start GetP()
start GetT()
start GetDeg()
start GetP()
first var in param: 000001cfa4b9a4f0
before cycle in GetDefParam
ret from GetParams, ip: 40
try to find closing brace in ip: 40
content of l_node: Число
finish GetAss()
finish GetTrunkBranch()
block root: 000001cfa4b9ada0
before cycle in CodeBlock
start NewLine: ip: 41, tcode->Size: 44
new line found (curr_line): 9
NLN: 1, curr level: 2
level-: 1
NLN: 1
block root: 000001cfa4b9ada0
content of l_node in GetIf: EQ
finish GetTrunkBranch()
block root: 000001cfa4b9aa80
before cycle in CodeBlock
start NewLine: ip: 41, tcode->Size: 44
new line found (curr_line): 9
NLN: 1, curr level: 1
iteration in CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
Returning GetOutput instead of INPUT
start GetOutput
Returning GetNewVar instead of OUTPUT
start GetNewVar
Returning GetRet instead of NEWVAR
start GetRet
start GetE()
start GetT()
start GetDeg()
start GetP()
got expression in GetRet()
finish GetRet()
finish GetTrunkBranch()
found action: 000001cfa4b9acb0, type: STM
block tail: 000001cfa4b9aa80
end iteration
curr_level: 1
level-: 0
NLN: -336467753
block root: 000001cfa4b9aa80
finish GetTrunkBranch()
found action: 000001cfa4b9b4d0, type: STM
block tail: 000001cfa4b9a040
end iteration
curr_level: 0
start NewLine: ip: 43, tcode->Size: 44
level-: -1
NLN: 5522770
block root: 000001cfa4b9a040
tree pointer in HTMLDump: 00007ff63afff7a0
picture name: graphCode0.png
tree pointer: 00007ff63afff7a0
start making console cmd
console cmd: dot -T png -o graphCode0.png dump.dot
tree made, start writing
Start writing tree
start writing node: OP
start writing node: OP
start writing node: FUNC
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: FUNC
start writing node: OP
start writing node: VAL
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: OP
start writing node: FUNC
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: VAL
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAL
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: FUNC
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: VAL
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAR
Finish writing tree
Start scanning tree file


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: FUNC
has sons
read line 2: FUNC
new op is ready


start scanning node
read line 1: "main"
has sons
read line 2: "main"
num read sym before val = 0
num read sym in val = 0


start scanning node
read line 1: PAR
has sons
read line 2: PAR
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: VOID
has sons
read line 2: VOID
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: VAR
has sons
read line 2: VAR
new op is ready


start scanning node
read line 1: "Волк"
read line 2: "Волк"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: CALL
has sons
read line 2: CALL
new op is ready


start scanning node
read line 1: "Факториал"
has sons
read line 2: "Факториал"
num read sym before val = 0
num read sym in val = 0


start scanning node
read line 1: PAR
has sons
read line 2: PAR
new op is ready


start scanning node
read line 1: 7
read line 2: 7
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
has sons
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: OUT
has sons
read line 2: OUT
new op is ready


start scanning node
read line 1: PAR
has sons
read line 2: PAR
new op is ready


start scanning node
read line 1: "Волк"
read line 2: "Волк"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: FUNC
has sons
read line 2: FUNC
new op is ready


start scanning node
read line 1: "Факториал"
has sons
read line 2: "Факториал"
num read sym before val = 0
num read sym in val = 0


start scanning node
read line 1: PAR
has sons
read line 2: PAR
new op is ready


start scanning node
read line 1: "Число"
read line 2: "Число"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: VOID
has sons
read line 2: VOID
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: IF
has sons
read line 2: IF
new op is ready


start scanning node
read line 1: EQ
has sons
read line 2: EQ
new op is ready


start scanning node
read line 1: "Число"
read line 2: "Число"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: 1
read line 2: 1
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: ELSE
has sons
read line 2: ELSE
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: RET
has sons
read line 2: RET
new op is ready


start scanning node
read line 1: 1
read line 2: 1
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: ASS
has sons
read line 2: ASS
new op is ready


start scanning node
read line 1: "Число"
read line 2: "Число"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: MUL
has sons
read line 2: MUL
new op is ready


start scanning node
read line 1: "Число"
read line 2: "Число"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: CALL
has sons
read line 2: CALL
new op is ready


start scanning node
read line 1: "Факториал"
has sons
read line 2: "Факториал"
num read sym before val = 0
num read sym in val = 0


start scanning node
read line 1: PAR
has sons
read line 2: PAR
new op is ready


start scanning node
read line 1: SUB
has sons
read line 2: SUB
new op is ready


start scanning node
read line 1: "Число"
read line 2: "Число"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: 1
read line 2: 1
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
has sons
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: RET
has sons
read line 2: RET
new op is ready


start scanning node
read line 1: "Число"
read line 2: "Число"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready
Finish scanning tree file
tree pointer in HTMLDump: 00000016181ff680
picture name: graphCode1.png
tree pointer: 00000016181ff680
start making console cmd
console cmd: dot -T png -o graphCode1.png dump.dot


++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

FUNC found


++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Волк, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Волк, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Волк, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Волк, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Волк, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

FUNC found


++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

try to MUL

++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------


$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
--------------------Finish program--------------------