

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
--------------------Start program--------------------
File size = 497
buffer size: 497
fread number of symbols: 486
tcode created
line in readVal: main ()
	Лучше иметь друга, чем друг друга: Тигр 0
	Дед - это как волк, только не волк: Тигр
	Лучше иметь друга, чем друг друга: Волк Факториал (Тигр)
	Когда волк молчит, лучше его не перебивать: Волк	
Обид не держу - держу пиво. Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Лучше иметь друга, чем друг друга: Лев 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0
next sym: 40
line in readVal: Тигр 0
	Дед - это как волк, только не волк: Тигр
	Лучше иметь друга, чем друг друга: Волк Факториал (Тигр)
	Когда волк молчит, лучше его не перебивать: Волк	
Обид не держу - держу пиво. Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Лучше иметь друга, чем друг друга: Лев 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0
next sym: 48
line in readVal: 0
	Дед - это как волк, только не волк: Тигр
	Лучше иметь друга, чем друг друга: Волк Факториал (Тигр)
	Когда волк молчит, лучше его не перебивать: Волк	
Обид не держу - держу пиво. Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Лучше иметь друга, чем друг друга: Лев 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 1


++++++++++Tcode Dump++++++++++

Size     = 9
Capacity = 10

[0000]:  OPR    VOID
[0001]:  STR    main
[0002]:  OPR    OPEN
[0003]:  OPR    CLOS
[0004]:  NLN    1
[0005]:  OPR    VAR
[0006]:  STR    Тигр
[0007]:  VAL    0
[0008]:  NLN    1
[0009]:  FREE

----------Tcode Dump----------

finish Tcode Recalloc


++++++++++Tcode Dump++++++++++

Size     = 9
Capacity = 20

[0000]:  OPR    VOID
[0001]:  STR    main
[0002]:  OPR    OPEN
[0003]:  OPR    CLOS
[0004]:  NLN    1
[0005]:  OPR    VAR
[0006]:  STR    Тигр
[0007]:  VAL    0
[0008]:  NLN    1
[0009]:  FREE
[0010]:  FREE
[0011]:  FREE
[0012]:  FREE
[0013]:  FREE
[0014]:  FREE
[0015]:  FREE
[0016]:  FREE
[0017]:  FREE
[0018]:  FREE
[0019]:  FREE

----------Tcode Dump----------

line in readVal: Тигр
	Лучше иметь друга, чем друг друга: Волк Факториал (Тигр)
	Когда волк молчит, лучше его не перебивать: Волк	
Обид не держу - держу пиво. Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Лучше иметь друга, чем друг друга: Лев 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0
next sym: -53
line in readVal: Волк Факториал (Тигр)
	Когда волк молчит, лучше его не перебивать: Волк	
Обид не держу - держу пиво. Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Лучше иметь друга, чем друг друга: Лев 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0
next sym: -44
line in readVal: Факториал (Тигр)
	Когда волк молчит, лучше его не перебивать: Волк	
Обид не держу - держу пиво. Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Лучше иметь друга, чем друг друга: Лев 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0
next sym: 40
line in readVal: Тигр)
	Когда волк молчит, лучше его не перебивать: Волк	
Обид не держу - держу пиво. Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Лучше иметь друга, чем друг друга: Лев 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0
next sym: 41


++++++++++Tcode Dump++++++++++

Size     = 19
Capacity = 20

[0000]:  OPR    VOID
[0001]:  STR    main
[0002]:  OPR    OPEN
[0003]:  OPR    CLOS
[0004]:  NLN    1
[0005]:  OPR    VAR
[0006]:  STR    Тигр
[0007]:  VAL    0
[0008]:  NLN    1
[0009]:  OPR    INP
[0010]:  STR    Тигр
[0011]:  NLN    1
[0012]:  OPR    VAR
[0013]:  STR    Волк
[0014]:  STR    Факториал
[0015]:  OPR    OPEN
[0016]:  STR    Тигр
[0017]:  OPR    CLOS
[0018]:  NLN    1
[0019]:  FREE

----------Tcode Dump----------

finish Tcode Recalloc


++++++++++Tcode Dump++++++++++

Size     = 19
Capacity = 40

[0000]:  OPR    VOID
[0001]:  STR    main
[0002]:  OPR    OPEN
[0003]:  OPR    CLOS
[0004]:  NLN    1
[0005]:  OPR    VAR
[0006]:  STR    Тигр
[0007]:  VAL    0
[0008]:  NLN    1
[0009]:  OPR    INP
[0010]:  STR    Тигр
[0011]:  NLN    1
[0012]:  OPR    VAR
[0013]:  STR    Волк
[0014]:  STR    Факториал
[0015]:  OPR    OPEN
[0016]:  STR    Тигр
[0017]:  OPR    CLOS
[0018]:  NLN    1
[0019]:  FREE
[0020]:  FREE
[0021]:  FREE
[0022]:  FREE
[0023]:  FREE
[0024]:  FREE
[0025]:  FREE
[0026]:  FREE
[0027]:  FREE
[0028]:  FREE
[0029]:  FREE
[0030]:  FREE
[0031]:  FREE
[0032]:  FREE
[0033]:  FREE
[0034]:  FREE
[0035]:  FREE
[0036]:  FREE
[0037]:  FREE
[0038]:  FREE
[0039]:  FREE

----------Tcode Dump----------

line in readVal: Волк	
Обид не держу - держу пиво. Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Лучше иметь друга, чем друг друга: Лев 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0
next sym: -50
line in readVal: Факториал (Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Лучше иметь друга, чем друг друга: Лев 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0
next sym: 40
line in readVal: Число)
	Я может и не может: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Лучше иметь друга, чем друг друга: Лев 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0
next sym: 41
line in readVal: Число равный 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Лучше иметь друга, чем друг друга: Лев 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0
next sym: -16
line in readVal: 1
		Сделал дело - дело сделано. 1
	Но хотя бы не я:
		Лучше иметь друга, чем друг друга: Лев 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 1
line in readVal: 1
	Но хотя бы не я:
		Лучше иметь друга, чем друг друга: Лев 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 1
line in readVal: Лев 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0


++++++++++Tcode Dump++++++++++

Size     = 39
Capacity = 40

[0000]:  OPR    VOID
[0001]:  STR    main
[0002]:  OPR    OPEN
[0003]:  OPR    CLOS
[0004]:  NLN    1
[0005]:  OPR    VAR
[0006]:  STR    Тигр
[0007]:  VAL    0
[0008]:  NLN    1
[0009]:  OPR    INP
[0010]:  STR    Тигр
[0011]:  NLN    1
[0012]:  OPR    VAR
[0013]:  STR    Волк
[0014]:  STR    Факториал
[0015]:  OPR    OPEN
[0016]:  STR    Тигр
[0017]:  OPR    CLOS
[0018]:  NLN    1
[0019]:  OPR    OUT
[0020]:  STR    Волк
[0021]:  NLN    0
[0022]:  OPR    VOID
[0023]:  STR    Факториал
[0024]:  OPR    OPEN
[0025]:  STR    Число
[0026]:  OPR    CLOS
[0027]:  NLN    1
[0028]:  OPR    IF
[0029]:  STR    Число
[0030]:  OPR    EQ
[0031]:  VAL    1
[0032]:  NLN    2
[0033]:  OPR    RET
[0034]:  VAL    1
[0035]:  NLN    1
[0036]:  OPR    ELSE
[0037]:  NLN    2
[0038]:  OPR    VAR
[0039]:  FREE

----------Tcode Dump----------

finish Tcode Recalloc


++++++++++Tcode Dump++++++++++

Size     = 39
Capacity = 80

[0000]:  OPR    VOID
[0001]:  STR    main
[0002]:  OPR    OPEN
[0003]:  OPR    CLOS
[0004]:  NLN    1
[0005]:  OPR    VAR
[0006]:  STR    Тигр
[0007]:  VAL    0
[0008]:  NLN    1
[0009]:  OPR    INP
[0010]:  STR    Тигр
[0011]:  NLN    1
[0012]:  OPR    VAR
[0013]:  STR    Волк
[0014]:  STR    Факториал
[0015]:  OPR    OPEN
[0016]:  STR    Тигр
[0017]:  OPR    CLOS
[0018]:  NLN    1
[0019]:  OPR    OUT
[0020]:  STR    Волк
[0021]:  NLN    0
[0022]:  OPR    VOID
[0023]:  STR    Факториал
[0024]:  OPR    OPEN
[0025]:  STR    Число
[0026]:  OPR    CLOS
[0027]:  NLN    1
[0028]:  OPR    IF
[0029]:  STR    Число
[0030]:  OPR    EQ
[0031]:  VAL    1
[0032]:  NLN    2
[0033]:  OPR    RET
[0034]:  VAL    1
[0035]:  NLN    1
[0036]:  OPR    ELSE
[0037]:  NLN    2
[0038]:  OPR    VAR
[0039]:  FREE
[0040]:  FREE
[0041]:  FREE
[0042]:  FREE
[0043]:  FREE
[0044]:  FREE
[0045]:  FREE
[0046]:  FREE
[0047]:  FREE
[0048]:  FREE
[0049]:  FREE
[0050]:  FREE
[0051]:  FREE
[0052]:  FREE
[0053]:  FREE
[0054]:  FREE
[0055]:  FREE
[0056]:  FREE
[0057]:  FREE
[0058]:  FREE
[0059]:  FREE
[0060]:  FREE
[0061]:  FREE
[0062]:  FREE
[0063]:  FREE
[0064]:  FREE
[0065]:  FREE
[0066]:  FREE
[0067]:  FREE
[0068]:  FREE
[0069]:  FREE
[0070]:  FREE
[0071]:  FREE
[0072]:  FREE
[0073]:  FREE
[0074]:  FREE
[0075]:  FREE
[0076]:  FREE
[0077]:  FREE
[0078]:  FREE
[0079]:  FREE

----------Tcode Dump----------

next sym: 48
line in readVal: 0
		Запомните твари: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 1
line in readVal: Лев Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0
next sym: -41
line in readVal: Число*Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0
next sym: 42
line in readVal: Факториал(Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0
next sym: 40
line in readVal: Число-1)
		Сделал дело - дело сделано. Лев end.
num read sym: 0
next sym: 45
line in readVal: 1)
		Сделал дело - дело сделано. Лев end.
num read sym: 1
line in readVal: Лев end.
num read sym: 0
next sym: 0


++++++++++Tcode Dump++++++++++

Size     = 55
Capacity = 80

[0000]:  OPR    VOID
[0001]:  STR    main
[0002]:  OPR    OPEN
[0003]:  OPR    CLOS
[0004]:  NLN    1
[0005]:  OPR    VAR
[0006]:  STR    Тигр
[0007]:  VAL    0
[0008]:  NLN    1
[0009]:  OPR    INP
[0010]:  STR    Тигр
[0011]:  NLN    1
[0012]:  OPR    VAR
[0013]:  STR    Волк
[0014]:  STR    Факториал
[0015]:  OPR    OPEN
[0016]:  STR    Тигр
[0017]:  OPR    CLOS
[0018]:  NLN    1
[0019]:  OPR    OUT
[0020]:  STR    Волк
[0021]:  NLN    0
[0022]:  OPR    VOID
[0023]:  STR    Факториал
[0024]:  OPR    OPEN
[0025]:  STR    Число
[0026]:  OPR    CLOS
[0027]:  NLN    1
[0028]:  OPR    IF
[0029]:  STR    Число
[0030]:  OPR    EQ
[0031]:  VAL    1
[0032]:  NLN    2
[0033]:  OPR    RET
[0034]:  VAL    1
[0035]:  NLN    1
[0036]:  OPR    ELSE
[0037]:  NLN    2
[0038]:  OPR    VAR
[0039]:  STR    Лев
[0040]:  VAL    0
[0041]:  NLN    2
[0042]:  OPR    ASS
[0043]:  STR    Лев
[0044]:  STR    Число
[0045]:  OPR    MUL
[0046]:  STR    Факториал
[0047]:  OPR    OPEN
[0048]:  STR    Число
[0049]:  OPR    SUB
[0050]:  VAL    1
[0051]:  OPR    CLOS
[0052]:  NLN    2
[0053]:  OPR    RET
[0054]:  STR    Лев
[0055]:  FREE
[0056]:  FREE
[0057]:  FREE
[0058]:  FREE
[0059]:  FREE
[0060]:  FREE
[0061]:  FREE
[0062]:  FREE
[0063]:  FREE
[0064]:  FREE
[0065]:  FREE
[0066]:  FREE
[0067]:  FREE
[0068]:  FREE
[0069]:  FREE
[0070]:  FREE
[0071]:  FREE
[0072]:  FREE
[0073]:  FREE
[0074]:  FREE
[0075]:  FREE
[0076]:  FREE
[0077]:  FREE
[0078]:  FREE
[0079]:  FREE

----------Tcode Dump----------

start making syntax tree
start CodeBlock
try to find open brace in ip: 2
start GetDefParams
start GetVariable: ip=3
first var in param: 0000000000000000
No def params found
try to find closing brace in ip: 3
start NewLine: ip: 4, tcode->Size: 55
new line found (curr_line): 2
NLN: 1, curr level: 0
start CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
Returning GetOutput instead of INPUT
start GetOutput
Returning GetNewVar instead of OUTPUT
start GetNewVar
start GetVariable: ip=6
got variable in GetNewVar()
start GetE()
start GetT()
start GetSqrt()
start GetDeg()
start GetP()
content of l_node: Тигр
finish GetNewVar()
finish GetTrunkBranch()
block root: 000002aa706b9d20
before cycle in CodeBlock
start NewLine: ip: 8, tcode->Size: 55
new line found (curr_line): 3
NLN: 1, curr level: 1
iteration in CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
start GetDefParams
start GetE()
start GetT()
start GetSqrt()
start GetDeg()
start GetP()
first var in param: 000002aa706b9dc0
before cycle in GetDefParam
ret from GetParams, ip: 11
got expression in GetRet()
finish GetAss()
finish GetTrunkBranch()
found action: 000002aa706b9e60, type: STM
block tail: 000002aa706b9d20
end iteration
curr_level: 1
start NewLine: ip: 11, tcode->Size: 55
new line found (curr_line): 4
NLN: 1, curr level: 1
iteration in CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
Returning GetOutput instead of INPUT
start GetOutput
Returning GetNewVar instead of OUTPUT
start GetNewVar
start GetVariable: ip=13
got variable in GetNewVar()
start GetE()
start GetT()
start GetSqrt()
start GetDeg()
start GetP()
try to find open brace in ip: 15
start GetDefParams
start GetE()
start GetT()
start GetSqrt()
start GetDeg()
start GetP()
first var in param: 000002aa706ba360
before cycle in GetDefParam
ret from GetParams, ip: 17
try to find closing brace in ip: 17
content of l_node: Волк
finish GetNewVar()
finish GetTrunkBranch()
found action: 000002aa706ba400, type: STM
block tail: 000002aa706b9e60
end iteration
curr_level: 1
start NewLine: ip: 18, tcode->Size: 55
new line found (curr_line): 5
NLN: 1, curr level: 1
iteration in CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
Returning GetOutput instead of INPUT
start GetOutput
start GetDefParams
start GetE()
start GetT()
start GetSqrt()
start GetDeg()
start GetP()
first var in param: 000002aa706ba090
before cycle in GetDefParam
ret from GetParams, ip: 21
got expression in GetOutput()
finish GetOutput()
finish GetTrunkBranch()
found action: 000002aa706b9ff0, type: STM
block tail: 000002aa706ba400
end iteration
curr_level: 1
start NewLine: ip: 21, tcode->Size: 55
new line found (curr_line): 6
NLN: 0, curr level: 1
level-: 0
NLN: 0
block root: 000002aa706b9d20
finish GetTrunkBranch()
block root: 000002aa706ba680
before cycle in CodeBlock
start NewLine: ip: 21, tcode->Size: 55
new line found (curr_line): 6
NLN: 0, curr level: 0
iteration in CodeBlock
try to find open brace in ip: 24
start GetDefParams
start GetVariable: ip=25
first var in param: 000002aa706ba4f0
before cycle in GetDefParam
ret from GetParams, ip: 26
try to find closing brace in ip: 26
start NewLine: ip: 27, tcode->Size: 55
new line found (curr_line): 7
NLN: 1, curr level: 0
start CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
Returning GetOutput instead of INPUT
start GetOutput
Returning GetNewVar instead of OUTPUT
start GetNewVar
Returning GetRet instead of NEWVAR
start GetRet
Returning GetWhile instead of RET
returning GetAss in GetWhile
start GetBoolP
start GetE()
start GetT()
start GetSqrt()
start GetDeg()
start GetP()
start GetE()
start GetT()
start GetSqrt()
start GetDeg()
start GetP()
start NewLine: ip: 32, tcode->Size: 55
new line found (curr_line): 8
NLN: 2, curr level: 1
start CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
Returning GetOutput instead of INPUT
start GetOutput
Returning GetNewVar instead of OUTPUT
start GetNewVar
Returning GetRet instead of NEWVAR
start GetRet
start GetE()
start GetT()
start GetSqrt()
start GetDeg()
start GetP()
got expression in GetRet()
finish GetRet()
finish GetTrunkBranch()
block root: 000002aa706ba0e0
before cycle in CodeBlock
start NewLine: ip: 35, tcode->Size: 55
new line found (curr_line): 9
NLN: 1, curr level: 2
level-: 1
NLN: 1
block root: 000002aa706ba0e0
start NewLine: ip: 35, tcode->Size: 55
new line found (curr_line): 9
NLN: 1, curr level: 1
start NewLine: ip: 37, tcode->Size: 55
new line found (curr_line): 10
NLN: 2, curr level: 1
start CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
Returning GetOutput instead of INPUT
start GetOutput
Returning GetNewVar instead of OUTPUT
start GetNewVar
start GetVariable: ip=39
got variable in GetNewVar()
start GetE()
start GetT()
start GetSqrt()
start GetDeg()
start GetP()
content of l_node: Лев
finish GetNewVar()
finish GetTrunkBranch()
block root: 000002aa706bb390
before cycle in CodeBlock
start NewLine: ip: 41, tcode->Size: 55
new line found (curr_line): 11
NLN: 2, curr level: 2
iteration in CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
Returning GetOutput instead of INPUT
start GetOutput
Returning GetNewVar instead of OUTPUT
start GetNewVar
Returning GetRet instead of NEWVAR
start GetRet
Returning GetWhile instead of RET
returning GetAss in GetWhile
returning GetAss in GetIf
start GetAss
start GetVariable: ip=43
got variable in GetAss()
start GetE()
start GetT()
start GetSqrt()
start GetDeg()
start GetP()
start GetSqrt()
start GetDeg()
start GetP()
try to find open brace in ip: 47
start GetDefParams
start GetE()
start GetT()
start GetSqrt()
start GetDeg()
start GetP()
start GetT()
start GetSqrt()
start GetDeg()
start GetP()
first var in param: 000002aa706bb480
before cycle in GetDefParam
ret from GetParams, ip: 51
try to find closing brace in ip: 51
content of l_node: Лев
finish GetAss()
finish GetTrunkBranch()
found action: 000002aa706bb430, type: STM
block tail: 000002aa706bb390
end iteration
curr_level: 2
start NewLine: ip: 52, tcode->Size: 55
new line found (curr_line): 12
NLN: 2, curr level: 2
iteration in CodeBlock
returning GetCall in GetVoid
returning GetInput in GetCall
start GetInput
Returning GetOutput instead of INPUT
start GetOutput
Returning GetNewVar instead of OUTPUT
start GetNewVar
Returning GetRet instead of NEWVAR
start GetRet
start GetE()
start GetT()
start GetSqrt()
start GetDeg()
start GetP()
got expression in GetRet()
finish GetRet()
finish GetTrunkBranch()
found action: 000002aa706bb4d0, type: STM
block tail: 000002aa706bb430
end iteration
curr_level: 2
level-: 1
NLN: 14869963
block root: 000002aa706bb390
content of l_node in GetIf: EQ
finish GetTrunkBranch()
block root: 000002aa706ba800
before cycle in CodeBlock
start NewLine: ip: 54, tcode->Size: 55
level-: 0
NLN: 5522770
block root: 000002aa706ba800
finish GetTrunkBranch()
found action: 000002aa706bb570, type: STM
block tail: 000002aa706ba680
end iteration
curr_level: 0
start NewLine: ip: 53, tcode->Size: 55
level-: -1
NLN: 2
block root: 000002aa706ba680
tree pointer in HTMLDump: 00007ff788a507a0
picture name: graphCode0.png
tree pointer: 00007ff788a507a0
start making console cmd
console cmd: dot -T png -o graphCode0.png dump.dot
tree made, start writing
Start writing tree
start writing node: OP
start writing node: OP
start writing node: FUNC
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: VAL
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: FUNC
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: OP
start writing node: FUNC
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: VAL
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAL
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: VAL
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: FUNC
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: VAL
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAR
Finish writing tree
Start scanning tree file


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: FUNC
has sons
read line 2: FUNC
new op is ready


start scanning node
read line 1: "main"
has sons
read line 2: "main"
num read sym before val = 0
num read sym in val = 0


start scanning node
read line 1: PAR
has sons
read line 2: PAR
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: VOID
has sons
read line 2: VOID
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: VAR
has sons
read line 2: VAR
new op is ready


start scanning node
read line 1: "Тигр"
read line 2: "Тигр"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: 0
read line 2: 0
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: INP
has sons
read line 2: INP
new op is ready


start scanning node
read line 1: PAR
has sons
read line 2: PAR
new op is ready


start scanning node
read line 1: "Тигр"
read line 2: "Тигр"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: VAR
has sons
read line 2: VAR
new op is ready


start scanning node
read line 1: "Волк"
read line 2: "Волк"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: CALL
has sons
read line 2: CALL
new op is ready


start scanning node
read line 1: "Факториал"
has sons
read line 2: "Факториал"
num read sym before val = 0
num read sym in val = 0


start scanning node
read line 1: PAR
has sons
read line 2: PAR
new op is ready


start scanning node
read line 1: "Тигр"
read line 2: "Тигр"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
has sons
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: OUT
has sons
read line 2: OUT
new op is ready


start scanning node
read line 1: PAR
has sons
read line 2: PAR
new op is ready


start scanning node
read line 1: "Волк"
read line 2: "Волк"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: FUNC
has sons
read line 2: FUNC
new op is ready


start scanning node
read line 1: "Факториал"
has sons
read line 2: "Факториал"
num read sym before val = 0
num read sym in val = 0


start scanning node
read line 1: PAR
has sons
read line 2: PAR
new op is ready


start scanning node
read line 1: "Число"
read line 2: "Число"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: VOID
has sons
read line 2: VOID
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: IF
has sons
read line 2: IF
new op is ready


start scanning node
read line 1: EQ
has sons
read line 2: EQ
new op is ready


start scanning node
read line 1: "Число"
read line 2: "Число"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: 1
read line 2: 1
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: ELSE
has sons
read line 2: ELSE
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: RET
has sons
read line 2: RET
new op is ready


start scanning node
read line 1: 1
read line 2: 1
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: VAR
has sons
read line 2: VAR
new op is ready


start scanning node
read line 1: "Лев"
read line 2: "Лев"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: 0
read line 2: 0
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: ASS
has sons
read line 2: ASS
new op is ready


start scanning node
read line 1: "Лев"
read line 2: "Лев"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: MUL
has sons
read line 2: MUL
new op is ready


start scanning node
read line 1: "Число"
read line 2: "Число"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: CALL
has sons
read line 2: CALL
new op is ready


start scanning node
read line 1: "Факториал"
has sons
read line 2: "Факториал"
num read sym before val = 0
num read sym in val = 0


start scanning node
read line 1: PAR
has sons
read line 2: PAR
new op is ready


start scanning node
read line 1: SUB
has sons
read line 2: SUB
new op is ready


start scanning node
read line 1: "Число"
read line 2: "Число"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: 1
read line 2: 1
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
has sons
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: RET
has sons
read line 2: RET
new op is ready


start scanning node
read line 1: "Лев"
read line 2: "Лев"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready
Finish scanning tree file
tree pointer in HTMLDump: 000000d97d3ffd80
picture name: graphCode1.png
tree pointer: 000000d97d3ffd80
start making console cmd
console cmd: dot -T png -o graphCode1.png dump.dot


++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation STM



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation FUNC



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

FUNC found


++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation PAR



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation STM



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation VAR



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Тигр, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Тигр, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation STM



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Тигр, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation INP



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Тигр, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation STM



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Тигр, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation VAR



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Тигр, memloc: 15 
name: Волк, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation CALL



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Тигр, memloc: 15 
name: Волк, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation PAR



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Тигр, memloc: 15 
name: Волк, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation STM



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Тигр, memloc: 15 
name: Волк, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation OUT



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Тигр, memloc: 15 
name: Волк, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Тигр, memloc: 15 
name: Волк, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation NIL



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation STM



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation FUNC



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

FUNC found


++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation PAR



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation STM



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation IF



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation EQ



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation ELSE



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation STM



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation RET



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation NIL



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation STM



++++++++++TableVar Dump++++++++++

Size     = 1
Capacity = 5

name: Число, memloc: 15 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation VAR



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation STM



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation ASS



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation MUL



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation CALL



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation PAR



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation SUB



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

try to MUL

++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation STM



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation RET



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation NIL



++++++++++TableVar Dump++++++++++

Size     = 2
Capacity = 5

name: Число, memloc: 15 
name: Лев, memloc: 16 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation NIL



++++++++++TableVar Dump++++++++++

Size     = 0
Capacity = 5

name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 
name: , memloc: 0 

----------TableVar Dump----------

Start Run Operation NIL


$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
--------------------Finish program--------------------