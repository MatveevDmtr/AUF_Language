

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
--------------------Start program--------------------
File size = 451
buffer size: 451
fread number of symbols: 441
tcode created
line in readVal: БесплатныйСыр(Сыр)
	Запомните твари: Сыр 4
	Сделал дело - дело сделано. Сыр
Я может и не может: Волк слабее Лев неважно Лев сильнее Ящерица важно Кот сильнее Собака
	Я может и не может: Волк слабее 8 * АУФ[ 5+7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: Сыр)
	Запомните твари: Сыр 4
	Сделал дело - дело сделано. Сыр
Я может и не может: Волк слабее Лев неважно Лев сильнее Ящерица важно Кот сильнее Собака
	Я может и не может: Волк слабее 8 * АУФ[ 5+7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: Сыр 4
	Сделал дело - дело сделано. Сыр
Я может и не может: Волк слабее Лев неважно Лев сильнее Ящерица важно Кот сильнее Собака
	Я может и не может: Волк слабее 8 * АУФ[ 5+7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: 4
	Сделал дело - дело сделано. Сыр
Я может и не может: Волк слабее Лев неважно Лев сильнее Ящерица важно Кот сильнее Собака
	Я может и не может: Волк слабее 8 * АУФ[ 5+7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 1


++++++++++Tcode Dump++++++++++

Size     = 9
Capacity = 10

[0000]:  OPR    TYPE
[0001]:  STR    БесплатныйСыр
[0002]:  OPR    OPEN
[0003]:  STR    Сыр
[0004]:  OPR    CLOS
[0005]:  NLN    1
[0006]:  OPR    ASS
[0007]:  STR    Сыр
[0008]:  VAL    4
[0009]:  FREE

----------Tcode Dump----------

finish Tcode Recalloc


++++++++++Tcode Dump++++++++++

Size     = 9
Capacity = 20

[0000]:  OPR    TYPE
[0001]:  STR    БесплатныйСыр
[0002]:  OPR    OPEN
[0003]:  STR    Сыр
[0004]:  OPR    CLOS
[0005]:  NLN    1
[0006]:  OPR    ASS
[0007]:  STR    Сыр
[0008]:  VAL    4
[0009]:  FREE
[0010]:  FREE
[0011]:  FREE
[0012]:  FREE
[0013]:  FREE
[0014]:  FREE
[0015]:  FREE
[0016]:  FREE
[0017]:  FREE
[0018]:  FREE
[0019]:  FREE

----------Tcode Dump----------

line in readVal: Сыр
Я может и не может: Волк слабее Лев неважно Лев сильнее Ящерица важно Кот сильнее Собака
	Я может и не может: Волк слабее 8 * АУФ[ 5+7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: Волк слабее Лев неважно Лев сильнее Ящерица важно Кот сильнее Собака
	Я может и не может: Волк слабее 8 * АУФ[ 5+7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: Лев неважно Лев сильнее Ящерица важно Кот сильнее Собака
	Я может и не может: Волк слабее 8 * АУФ[ 5+7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: Лев сильнее Ящерица важно Кот сильнее Собака
	Я может и не может: Волк слабее 8 * АУФ[ 5+7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0


++++++++++Tcode Dump++++++++++

Size     = 19
Capacity = 20

[0000]:  OPR    TYPE
[0001]:  STR    БесплатныйСыр
[0002]:  OPR    OPEN
[0003]:  STR    Сыр
[0004]:  OPR    CLOS
[0005]:  NLN    1
[0006]:  OPR    ASS
[0007]:  STR    Сыр
[0008]:  VAL    4
[0009]:  NLN    1
[0010]:  OPR    RET
[0011]:  STR    Сыр
[0012]:  NLN    0
[0013]:  OPR    IF
[0014]:  STR    Волк
[0015]:  OPR    LESS
[0016]:  STR    Лев
[0017]:  OPR    OR
[0018]:  STR    Лев
[0019]:  FREE

----------Tcode Dump----------

finish Tcode Recalloc


++++++++++Tcode Dump++++++++++

Size     = 19
Capacity = 40

[0000]:  OPR    TYPE
[0001]:  STR    БесплатныйСыр
[0002]:  OPR    OPEN
[0003]:  STR    Сыр
[0004]:  OPR    CLOS
[0005]:  NLN    1
[0006]:  OPR    ASS
[0007]:  STR    Сыр
[0008]:  VAL    4
[0009]:  NLN    1
[0010]:  OPR    RET
[0011]:  STR    Сыр
[0012]:  NLN    0
[0013]:  OPR    IF
[0014]:  STR    Волк
[0015]:  OPR    LESS
[0016]:  STR    Лев
[0017]:  OPR    OR
[0018]:  STR    Лев
[0019]:  FREE
[0020]:  FREE
[0021]:  FREE
[0022]:  FREE
[0023]:  FREE
[0024]:  FREE
[0025]:  FREE
[0026]:  FREE
[0027]:  FREE
[0028]:  FREE
[0029]:  FREE
[0030]:  FREE
[0031]:  FREE
[0032]:  FREE
[0033]:  FREE
[0034]:  FREE
[0035]:  FREE
[0036]:  FREE
[0037]:  FREE
[0038]:  FREE
[0039]:  FREE

----------Tcode Dump----------

line in readVal: Ящерица важно Кот сильнее Собака
	Я может и не может: Волк слабее 8 * АУФ[ 5+7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: Кот сильнее Собака
	Я может и не может: Волк слабее 8 * АУФ[ 5+7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: Собака
	Я может и не может: Волк слабее 8 * АУФ[ 5+7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: Волк слабее 8 * АУФ[ 5+7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: 8 * АУФ[ 5+7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 1
line in readVal: 5+7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 1
line in readVal: 7 ]АУФ
		Безумно можно быть первым: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 1
line in readVal: Слон сильнее Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0


++++++++++Tcode Dump++++++++++

Size     = 39
Capacity = 40

[0000]:  OPR    TYPE
[0001]:  STR    БесплатныйСыр
[0002]:  OPR    OPEN
[0003]:  STR    Сыр
[0004]:  OPR    CLOS
[0005]:  NLN    1
[0006]:  OPR    ASS
[0007]:  STR    Сыр
[0008]:  VAL    4
[0009]:  NLN    1
[0010]:  OPR    RET
[0011]:  STR    Сыр
[0012]:  NLN    0
[0013]:  OPR    IF
[0014]:  STR    Волк
[0015]:  OPR    LESS
[0016]:  STR    Лев
[0017]:  OPR    OR
[0018]:  STR    Лев
[0019]:  OPR    BIG
[0020]:  STR    Ящерица
[0021]:  OPR    AND
[0022]:  STR    Кот
[0023]:  OPR    BIG
[0024]:  STR    Собака
[0025]:  NLN    1
[0026]:  OPR    IF
[0027]:  STR    Волк
[0028]:  OPR    LESS
[0029]:  VAL    8
[0030]:  OPR    MUL
[0031]:  OPR    OPEN
[0032]:  VAL    5
[0033]:  OPR    ADD
[0034]:  VAL    7
[0035]:  OPR    CLOS
[0036]:  NLN    2
[0037]:  OPR    WHIL
[0038]:  STR    Слон
[0039]:  FREE

----------Tcode Dump----------

finish Tcode Recalloc


++++++++++Tcode Dump++++++++++

Size     = 39
Capacity = 80

[0000]:  OPR    TYPE
[0001]:  STR    БесплатныйСыр
[0002]:  OPR    OPEN
[0003]:  STR    Сыр
[0004]:  OPR    CLOS
[0005]:  NLN    1
[0006]:  OPR    ASS
[0007]:  STR    Сыр
[0008]:  VAL    4
[0009]:  NLN    1
[0010]:  OPR    RET
[0011]:  STR    Сыр
[0012]:  NLN    0
[0013]:  OPR    IF
[0014]:  STR    Волк
[0015]:  OPR    LESS
[0016]:  STR    Лев
[0017]:  OPR    OR
[0018]:  STR    Лев
[0019]:  OPR    BIG
[0020]:  STR    Ящерица
[0021]:  OPR    AND
[0022]:  STR    Кот
[0023]:  OPR    BIG
[0024]:  STR    Собака
[0025]:  NLN    1
[0026]:  OPR    IF
[0027]:  STR    Волк
[0028]:  OPR    LESS
[0029]:  VAL    8
[0030]:  OPR    MUL
[0031]:  OPR    OPEN
[0032]:  VAL    5
[0033]:  OPR    ADD
[0034]:  VAL    7
[0035]:  OPR    CLOS
[0036]:  NLN    2
[0037]:  OPR    WHIL
[0038]:  STR    Слон
[0039]:  FREE
[0040]:  FREE
[0041]:  FREE
[0042]:  FREE
[0043]:  FREE
[0044]:  FREE
[0045]:  FREE
[0046]:  FREE
[0047]:  FREE
[0048]:  FREE
[0049]:  FREE
[0050]:  FREE
[0051]:  FREE
[0052]:  FREE
[0053]:  FREE
[0054]:  FREE
[0055]:  FREE
[0056]:  FREE
[0057]:  FREE
[0058]:  FREE
[0059]:  FREE
[0060]:  FREE
[0061]:  FREE
[0062]:  FREE
[0063]:  FREE
[0064]:  FREE
[0065]:  FREE
[0066]:  FREE
[0067]:  FREE
[0068]:  FREE
[0069]:  FREE
[0070]:  FREE
[0071]:  FREE
[0072]:  FREE
[0073]:  FREE
[0074]:  FREE
[0075]:  FREE
[0076]:  FREE
[0077]:  FREE
[0078]:  FREE
[0079]:  FREE

----------Tcode Dump----------

line in readVal: Лошадь
			Запомните твари: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: Волк 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: 5
	Но хотя бы не я:
		Запомните твари: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 1
line in readVal: Тигр БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: БесплатныйСыр(9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: 9, 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 1
line in readVal: 3)
	Запомните твари: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 1
line in readVal: Волк Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: Овца
Запомните твари: Ага Тигр end.
num read sym: 0
line in readVal: Ага Тигр end.
num read sym: 0
line in readVal: Тигр end.
num read sym: 0


++++++++++Tcode Dump++++++++++

Size     = 64
Capacity = 80

[0000]:  OPR    TYPE
[0001]:  STR    БесплатныйСыр
[0002]:  OPR    OPEN
[0003]:  STR    Сыр
[0004]:  OPR    CLOS
[0005]:  NLN    1
[0006]:  OPR    ASS
[0007]:  STR    Сыр
[0008]:  VAL    4
[0009]:  NLN    1
[0010]:  OPR    RET
[0011]:  STR    Сыр
[0012]:  NLN    0
[0013]:  OPR    IF
[0014]:  STR    Волк
[0015]:  OPR    LESS
[0016]:  STR    Лев
[0017]:  OPR    OR
[0018]:  STR    Лев
[0019]:  OPR    BIG
[0020]:  STR    Ящерица
[0021]:  OPR    AND
[0022]:  STR    Кот
[0023]:  OPR    BIG
[0024]:  STR    Собака
[0025]:  NLN    1
[0026]:  OPR    IF
[0027]:  STR    Волк
[0028]:  OPR    LESS
[0029]:  VAL    8
[0030]:  OPR    MUL
[0031]:  OPR    OPEN
[0032]:  VAL    5
[0033]:  OPR    ADD
[0034]:  VAL    7
[0035]:  OPR    CLOS
[0036]:  NLN    2
[0037]:  OPR    WHIL
[0038]:  STR    Слон
[0039]:  OPR    BIG
[0040]:  STR    Лошадь
[0041]:  NLN    3
[0042]:  OPR    ASS
[0043]:  STR    Волк
[0044]:  VAL    5
[0045]:  NLN    1
[0046]:  OPR    ELSE
[0047]:  NLN    2
[0048]:  OPR    ASS
[0049]:  STR    Тигр
[0050]:  STR    БесплатныйСыр
[0051]:  OPR    OPEN
[0052]:  VAL    9
[0053]:  OPR    COM
[0054]:  VAL    3
[0055]:  OPR    CLOS
[0056]:  NLN    1
[0057]:  OPR    ASS
[0058]:  STR    Волк
[0059]:  STR    Овца
[0060]:  NLN    0
[0061]:  OPR    ASS
[0062]:  STR    Ага
[0063]:  STR    Тигр
[0064]:  FREE
[0065]:  FREE
[0066]:  FREE
[0067]:  FREE
[0068]:  FREE
[0069]:  FREE
[0070]:  FREE
[0071]:  FREE
[0072]:  FREE
[0073]:  FREE
[0074]:  FREE
[0075]:  FREE
[0076]:  FREE
[0077]:  FREE
[0078]:  FREE
[0079]:  FREE

----------Tcode Dump----------

start making syntax tree
start CodeBlock
try to find open brace in ip: 2
start GetDefParams
start GetVariable: ip=3
first var in param: 0000012bb2e539b0
before cycle in GetDefParam
ret from GetParams, ip: 4
try to find closing brace in ip: 4
start NewLine: ip: 5, tcode->Size: 64
new line found (curr_line): 2
NLN: 1, curr level: 0
start CodeBlock
returning GetCall in GetVoid
returning GetRet in GetCall
start GetRet
Returning GetWhile instead of RET
returning GetAss in GetWhile
returning GetAss in GetIf
start GetAss
start GetVariable: ip=7
got variable in GetAss()
start GetE()
start GetT()
start GetDeg()
start GetP()
content of l_node: Сыр
finish GetAss()
finish GetTrunkBranch()
block root: 0000012bb2e53b40
before cycle in CodeBlock
start NewLine: ip: 9, tcode->Size: 64
new line found (curr_line): 3
NLN: 1, curr level: 1
iteration in CodeBlock
returning GetCall in GetVoid
returning GetRet in GetCall
start GetRet
start GetE()
start GetT()
start GetDeg()
start GetP()
got expression in GetRet()
finish GetAss()
finish GetTrunkBranch()
found action: 0000012bb2e53c30, type: STM
block tail: 0000012bb2e53b40
end iteration
curr_level: 1
start NewLine: ip: 12, tcode->Size: 64
new line found (curr_line): 4
NLN: 0, curr level: 1
level-: 0
NLN: 0
block root: 0000012bb2e53b40
finish GetTrunkBranch()
block root: 0000012bb2e53c80
before cycle in CodeBlock
start NewLine: ip: 12, tcode->Size: 64
new line found (curr_line): 4
NLN: 0, curr level: 0
iteration in CodeBlock
returning GetCall in GetVoid
returning GetRet in GetCall
start GetRet
Returning GetWhile instead of RET
returning GetAss in GetWhile
start GetBoolP
start GetE()
start GetT()
start GetDeg()
start GetP()
start GetE()
start GetT()
start GetDeg()
start GetP()
start GetBoolP
start GetE()
start GetT()
start GetDeg()
start GetP()
start GetE()
start GetT()
start GetDeg()
start GetP()
start GetBoolP
start GetE()
start GetT()
start GetDeg()
start GetP()
start GetE()
start GetT()
start GetDeg()
start GetP()
start NewLine: ip: 25, tcode->Size: 64
new line found (curr_line): 5
NLN: 1, curr level: 0
start CodeBlock
returning GetCall in GetVoid
returning GetRet in GetCall
start GetRet
Returning GetWhile instead of RET
returning GetAss in GetWhile
start GetBoolP
start GetE()
start GetT()
start GetDeg()
start GetP()
start GetE()
start GetT()
start GetDeg()
start GetP()
start GetDeg()
start GetP()
start GetE()
start GetT()
start GetDeg()
start GetP()
start GetT()
start GetDeg()
start GetP()
start NewLine: ip: 36, tcode->Size: 64
new line found (curr_line): 6
NLN: 2, curr level: 1
start CodeBlock
returning GetCall in GetVoid
returning GetRet in GetCall
start GetRet
Returning GetWhile instead of RET
start GetBoolP
start GetE()
start GetT()
start GetDeg()
start GetP()
start GetE()
start GetT()
start GetDeg()
start GetP()
start NewLine: ip: 41, tcode->Size: 64
new line found (curr_line): 7
NLN: 3, curr level: 2
start CodeBlock
returning GetCall in GetVoid
returning GetRet in GetCall
start GetRet
Returning GetWhile instead of RET
returning GetAss in GetWhile
returning GetAss in GetIf
start GetAss
start GetVariable: ip=43
got variable in GetAss()
start GetE()
start GetT()
start GetDeg()
start GetP()
content of l_node: Волк
finish GetAss()
finish GetTrunkBranch()
block root: 0000012bb169a8f0
before cycle in CodeBlock
start NewLine: ip: 45, tcode->Size: 64
new line found (curr_line): 8
NLN: 1, curr level: 3
level-: 2
NLN: 1
block root: 0000012bb169a8f0
content of l_node in GetWhile: BIG
finish GetTrunkBranch()
block root: 0000012bb169b0c0
before cycle in CodeBlock
start NewLine: ip: 45, tcode->Size: 64
new line found (curr_line): 8
NLN: 1, curr level: 2
level-: 1
NLN: 1
block root: 0000012bb169b0c0
start NewLine: ip: 45, tcode->Size: 64
new line found (curr_line): 8
NLN: 1, curr level: 1
start NewLine: ip: 47, tcode->Size: 64
new line found (curr_line): 9
NLN: 2, curr level: 1
start CodeBlock
returning GetCall in GetVoid
returning GetRet in GetCall
start GetRet
Returning GetWhile instead of RET
returning GetAss in GetWhile
returning GetAss in GetIf
start GetAss
start GetVariable: ip=49
got variable in GetAss()
start GetE()
start GetT()
start GetDeg()
start GetP()
try to find open brace in ip: 51
start GetDefParams
start GetE()
start GetT()
start GetDeg()
start GetP()
first var in param: 0000012bb169a940
before cycle in GetDefParam
iteration in CodeBlock
start GetE()
start GetT()
start GetDeg()
start GetP()
end iteration in GetDefParams
ret from GetParams, ip: 55
try to find closing brace in ip: 55
content of l_node: Тигр
finish GetAss()
finish GetTrunkBranch()
block root: 0000012bb169adf0
before cycle in CodeBlock
start NewLine: ip: 56, tcode->Size: 64
new line found (curr_line): 10
NLN: 1, curr level: 2
level-: 1
NLN: 1
block root: 0000012bb169adf0
content of l_node in GetIf: LESS
finish GetTrunkBranch()
block root: 0000012bb169ad50
before cycle in CodeBlock
start NewLine: ip: 56, tcode->Size: 64
new line found (curr_line): 10
NLN: 1, curr level: 1
iteration in CodeBlock
returning GetCall in GetVoid
returning GetRet in GetCall
start GetRet
Returning GetWhile instead of RET
returning GetAss in GetWhile
returning GetAss in GetIf
start GetAss
start GetVariable: ip=58
got variable in GetAss()
start GetE()
start GetT()
start GetDeg()
start GetP()
content of l_node: Волк
finish GetAss()
finish GetTrunkBranch()
found action: 0000012bb169ac60, type: STM
block tail: 0000012bb169ad50
end iteration
curr_level: 1
start NewLine: ip: 60, tcode->Size: 64
new line found (curr_line): 11
NLN: 0, curr level: 1
level-: 0
NLN: 0
block root: 0000012bb169ad50
start NewLine: ip: 60, tcode->Size: 64
new line found (curr_line): 11
NLN: 0, curr level: 0
returning Empty Block in GetElse
content of l_node in GetIf: OR
finish GetTrunkBranch()
found action: 0000012bb169aee0, type: STM
block tail: 0000012bb2e53c80
end iteration
curr_level: 0
start NewLine: ip: 60, tcode->Size: 64
new line found (curr_line): 12
NLN: 0, curr level: 0
iteration in CodeBlock
returning GetCall in GetVoid
returning GetRet in GetCall
start GetRet
Returning GetWhile instead of RET
returning GetAss in GetWhile
returning GetAss in GetIf
start GetAss
start GetVariable: ip=62
got variable in GetAss()
start GetE()
start GetT()
start GetDeg()
start GetP()
content of l_node: Ага
finish GetAss()
finish GetTrunkBranch()
found action: 0000012bb169b1b0, type: STM
block tail: 0000012bb169aee0
end iteration
curr_level: 0
level-: -1
NLN: -253499182
block root: 0000012bb2e53c80
tree pointer in HTMLDump: 00007ff63309c7a0
picture name: graphCode0.png
tree pointer: 00007ff63309c7a0
start making console cmd
console cmd: dot -T png -o graphCode0.png dump.dot
tree made, start writing
Start writing tree
start writing node: OP
start writing node: OP
start writing node: FUNC
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: VAL
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: VAR
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: VAR
start writing node: OP
start writing node: VAR
start writing node: VAR
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: VAL
start writing node: OP
start writing node: VAL
start writing node: VAL
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: VAR
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: VAL
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: OP
start writing node: FUNC
start writing node: OP
start writing node: VAL
start writing node: OP
start writing node: VAL
start writing node: OP
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: VAR
start writing node: OP
start writing node: OP
start writing node: VAR
start writing node: VAR
Finish writing tree
Start scanning tree file


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: FUNC
has sons
read line 2: FUNC
new op is ready


start scanning node
read line 1: "БесплатныйСыр"
has sons
read line 2: "БесплатныйСыр"
num read sym before val = 0
num read sym in val = 0


start scanning node
read line 1: PAR
has sons
read line 2: PAR
new op is ready


start scanning node
read line 1: "Сыр"
read line 2: "Сыр"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: TYPE
has sons
read line 2: TYPE
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: ASS
has sons
read line 2: ASS
new op is ready


start scanning node
read line 1: "Сыр"
read line 2: "Сыр"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: 4
read line 2: 4
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: RET
has sons
read line 2: RET
new op is ready


start scanning node
read line 1: "Сыр"
read line 2: "Сыр"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: IF
has sons
read line 2: IF
new op is ready


start scanning node
read line 1: OR
has sons
read line 2: OR
new op is ready


start scanning node
read line 1: LESS
has sons
read line 2: LESS
new op is ready


start scanning node
read line 1: "Волк"
read line 2: "Волк"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: "Лев"
read line 2: "Лев"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: AND
has sons
read line 2: AND
new op is ready


start scanning node
read line 1: BIG
has sons
read line 2: BIG
new op is ready


start scanning node
read line 1: "Лев"
read line 2: "Лев"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: "Ящерица"
read line 2: "Ящерица"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: BIG
has sons
read line 2: BIG
new op is ready


start scanning node
read line 1: "Кот"
read line 2: "Кот"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: "Собака"
read line 2: "Собака"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: IF
has sons
read line 2: IF
new op is ready


start scanning node
read line 1: LESS
has sons
read line 2: LESS
new op is ready


start scanning node
read line 1: "Волк"
read line 2: "Волк"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: MUL
has sons
read line 2: MUL
new op is ready


start scanning node
read line 1: 8
read line 2: 8
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: ADD
has sons
read line 2: ADD
new op is ready


start scanning node
read line 1: 5
read line 2: 5
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: 7
read line 2: 7
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: ELSE
has sons
read line 2: ELSE
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: WHIL
has sons
read line 2: WHIL
new op is ready


start scanning node
read line 1: BIG
has sons
read line 2: BIG
new op is ready


start scanning node
read line 1: "Слон"
read line 2: "Слон"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: "Лошадь"
read line 2: "Лошадь"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: ASS
has sons
read line 2: ASS
new op is ready


start scanning node
read line 1: "Волк"
read line 2: "Волк"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: 5
read line 2: 5
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: ASS
has sons
read line 2: ASS
new op is ready


start scanning node
read line 1: "Тигр"
read line 2: "Тигр"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: CALL
has sons
read line 2: CALL
new op is ready


start scanning node
read line 1: "БесплатныйСыр"
has sons
read line 2: "БесплатныйСыр"
num read sym before val = 0
num read sym in val = 0


start scanning node
read line 1: PAR
has sons
read line 2: PAR
new op is ready


start scanning node
read line 1: 9
read line 2: 9
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: PAR
has sons
read line 2: PAR
new op is ready


start scanning node
read line 1: 3
read line 2: 3
num read sym before val = 1
num read sym in val = 1


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
has sons
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: ASS
has sons
read line 2: ASS
new op is ready


start scanning node
read line 1: "Волк"
read line 2: "Волк"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: "Овца"
read line 2: "Овца"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready


start scanning node
read line 1: STM
has sons
read line 2: STM
new op is ready


start scanning node
read line 1: ASS
has sons
read line 2: ASS
new op is ready


start scanning node
read line 1: "Ага"
read line 2: "Ага"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: "Тигр"
read line 2: "Тигр"
num read sym before val = 1
num read sym in val = 0


start scanning node
read line 1: NIL
read line 2: NIL
new op is ready
Finish scanning tree file
tree pointer in HTMLDump: 0000000510bff650
picture name: graphCode1.png
tree pointer: 0000000510bff650
start making console cmd
console cmd: dot -T png -o graphCode1.png dump.dot

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
--------------------Finish program--------------------